[{"title":"deploy your app in aliyun","url":"/2018/11/21/deploy/","content":"\n# 教程简介\n主要记录基于 ng + nodejs + mysql 开发的系统部署阿里云服务器的过程\n\n# 准备\n1、云服务器\n2、域名\n3、各种安装包\n4、自行了解部分词汇含义：ecs、备案、dns解析、安全组、公网ip，私网ip，iis\n\n# 主要步骤\n关键词：angular + nodejs + mysql + ecs + win2012R2_64位 + iis + pm2\n主要步骤中最耗费时间的是备案，笔者准备备案资料2-3天，备案审核整整一个星期，时间仅供参考\n这里用的是阿里云全家桶服务\n* 若是学生身份看这里：200大洋前后，一年的ecs服务器使用期，细节自行了解阿里云云翼计划。\n* 不是学生身份看这里：注册后阿里云会赠送一个月的ecs服务器，再购买两个月（约120大洋）即可（必须购足三个月，否则无备案服务号，也将无法备案）\n---\n\n### 域名\n入口：阿里云控制台=>域名与安全=>域名=>域名购买\n.com || .cn || .net 年费100+，笔者购10块购买了.top域名\n支付成功后，在控制台导入后列表中会出现该域名，然后实名认证\n域名解析（将域名和ecs的公网ip绑定起来）\n安全组设置（简而言之，配置可访问ecs的ip段、端口段）：端口80/80,88/88，ip配置：0.0.0.0/0\n\n说明：\n* 部分域名后缀是无法备案的 [详情见这里](http://www.miitbeian.gov.cn/publish/query/indexFirst.action)\n* 域名购买成功后，立即申请备案初审是无法通过的。原因：域名未入库，工信部无法核实，大概需要3个工作日\n* 在使用阿里云产品的过程中遇到任何问题，可以直接找在线客服或者电话人工客服，响应速度算是业界良心了\n---\n\n### ECS\n笔者选择的是最低配置：1g内存 + 1g CPU + 1Mbps带宽\n考虑到Linux的学习成本，镜像选择了win2012R2_64位\n\n---\n\n### 备案\n当你有了实名且已入库的域名 + 正常状态的ecs + 备案服务号即可申请备案了\n申请备案要很多资料，不同省份不同规则 [详情见这里](https://help.aliyun.com/knowledge_detail/36895.html?spm=5176.8087400.600752.1.58d815c9T0iS4d)\n这是备案成功后的反馈，也可以根据它知道自己需要准备哪些资料：\n![默认图片](https://i.loli.net/2018/11/21/5bf5131f78b5b.jpg)\n备案的一个原则是严格按照官方的要求去做，因为一个信息的不合规的后果便是重新申请备案，有一个时间成本在这里\n\n---\n\n### 环境搭建\n阿里云创建的默认实例是40GB的固态磁盘，通过公网ip可远程连接到云服务器\n\n\n#### `iis`\n远程连接过程可设置本地磁盘映射到ecs中，以达到传输文件的目的 [详情见这里](https://jingyan.baidu.com/album/148a192185f0ae4d71c3b138.html?picindex=1)\n连接成功后，开始菜单旁边的服务器管理器，添加角色,具体角色功能如图（可以理解为安装iis）：\n![默认图片](https://i.loli.net/2018/11/21/5bf51367e3cac.jpg).jpg)\n静态内容一定要勾选上！笔者当时一时疏忽没勾选上出现的问题：服务请求一切正常，本地apache访问也一切正常，发布到生产环境后静态资源出现问题！折腾了几天才发现这个没勾上\n\n基于这个阿里云的最低配置的服务器在安装角色的过程中会出现内存不足的情况 [内存不足解决方案](https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&tn=baidu&wd=%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%20%E8%AE%BE%E7%BD%AE&oq=md%25E7%25BC%2596%25E8%25BE%2591%25E5%2599%25A8&rsv_pq=d5df6d5d0000e893&rsv_t=e0d8%2FdixoNmMsQ6zVIapAzegp1iKzCR0YmZw10L6%2BuvU4cfu8QeRRr2Dt6E&rqlang=cn&rsv_enter=1&inputT=213796&rsv_sug3=28&rsv_sug1=19&rsv_sug7=100&bs=md%E7%BC%96%E8%BE%91%E5%99%A8)\n* 若成功安装，打开服务器的ie：http://localhost 会出现iis的初始化界面。\n* 否则，重新安装\n\n#### `dist`\n成功安装iis后，打开iis管理器，添加网站，配置物理路径、网站名（可空）、ip、端口等\n\n#### `nodejs + pm2`\n[node下载](https://npm.taobao.org/mirrors/node/v10.1.0/)\n下载好对应安装包后上传到服务器，node安装步骤和windows一致，没什么去很大区别\n\n成功安装nodejs、npm后：\n* npm install pm2 -g\n* 跳转到项目的服务端文件夹\n* pm2 start 具体的服务端js文件\n\nnodejs + pm2配合使用理论上可以达到ecs在不关机的情况下，node服务会一直连接\n\n#### `mysql`\n[mysql下载](https://dev.mysql.com/downloads/installer/)\n32位安装包下载还是可以安装64位的mysql服务的\n安装过程同理，和windows没什么很大区别\n\n连接mysql有可能会报：E RROR 1130: Host 'XXXXXX' is not allowed to connect to this MySQL server\nhack：\n* 打开mysql控制台\n* ```mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION```;\n\n# https协议\n#FIXME：http升级为https后无法发送请求\n\n# 性能优化\n[性能优化](./optimization.md)\n\n# 其它坑\n对于前端开发人员来说，iis可能是很陌生的，但这个配置又很重要！\n\n有时候dist打包好会出现js文件404的情况，两个处理方式：\n* 正确配置webpack，重新打包\n* 在build好的index.html：`<base href=\"./\">`\n","tags":["aliyun"]},{"title":"mongo init in window10","url":"/2018/11/20/mongo-init/","content":"\n#### 准备\n> 系统：windows10\n- [download mongo.msi](https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.6.8-signed.msi)\n\n#### 过程\n> compass-install.exe组件记得勾选\n\n1. custom安装在：C:\\mongodb，在C:\\mongodb中手动创建\n    - C:\\mongodb\\data\\db\n    - C:\\mongodb\\log\\mongodb.log\n\n2. 管理员运行cmd，并进入至C:\\mongodb\\bin\n```\n//运行mongodb服务\nmongod --dbpath C:\\mongodb\\data\\db --logpath=C:\\mongodb\\log\\mongodb.log --logappend\n```\n\n3. 管理员运行cmd，并进入至C:\\mongodb\\bin\n```\n//连接mongodb服务\nmongo\n\n```\n4. 浏览器运行 http://localhost:27017/ ，下图表示mongodb服务正常\n![默认](https://i.loli.net/2018/11/12/5be92167a8361.jpg)\n\n5. 以上启动服务器只是一次性的，当关闭了命令窗口，服务器即会关闭，可以将mongodb作为windows启动，这样一开机，mongodb服务就已经启动了\n```\n//把将mongodb作为windows服务启动：\nmongod --dbpath C:\\mongodb\\data\\db --logpath=C:\\mongodb\\log\\mongodb.log --logappend --install --serviceName \"MongoDB\"\n```\n6. win + r 运行 service.msc 即可看到MongoDB服务正在运行\n\n\n#### robo3t\n> open shell\n\n```\n//create first admin_user\nshow dbs\nuse exadmin_dev\nvar user = {\n\t\"user\" : \"zero\",\n\t\"email\" : \"zero@gmail.com\",\n\t\"type\" : \"ADMIN\",\n\t\"pass\" : \"$2a$10$vLIGgsFFasVPRqKI3KKareWfoHSGXOv1DSacVHGhp3svwOa7OQUKW\"\n}\ndb.admin_user.insert(user)\n```\n\n#### 备注\nbin：目录下可执行文件：mongodb是指服务本身，mongo是连接至mongodb该服务\n\n在mongo下：connection > database > collection > document or BSON document（类似mysql的row）> filed（类似mysql的column） > index\n\n**若需要**\n```\n//使用配置文件启动mongodb服务：在c:\\mongodb\\config创建一个文件mongodb.conf，加入配置文件与直接运行命令的效果是一样的\ndbpath=C:\\mongodb\\data\\db            # 数据库文件\nlogpath=C:\\mongodb\\log\\mongodb.log    # 日志文件\nlogappend=true                        # 日志采用追加模式，配置后mongodb日志会追加到现有的日志文件，不会重新创建一个新文件\njournal=true                        # 启用日志文件，默认启用\nquiet=true                            # 这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为 false\nport=27017                            # 端口号 默认为 27017\n```\n\n[mongo install and config](https://www.cnblogs.com/weschen/p/8213746.html)","tags":["mongo"]},{"title":"Parse foo.github.io to foo.com","url":"/2018/11/19/dns/","content":"\n\n\n### description\ngihub pages仅支持静态页面，博客恰好也属于其中，理论上说，不依赖于数据库的静态页面就可以在没有服务器的情况上访问。\n\n### 准备\n- 个人域名\n- 可正常访问的github个人博客，如：foo.github.io\n\n### 步骤\n1. blog/source下新建CHAME文件\n2. 写上：foo.com 不要www不要www不要www\n3. 打开域名商的控制台，添加解析记录，大多域名商需要以下几个字段\n    1. 记录类型：CNAME\n    2. 主机记录: www | @, 也就是说我们需要添加两条解析记录！\n    3. 解析线路：默认\n    4. 记录值：foo.github.io，即是你的目标域名\n    5. TTL: 10分钟，dns解析间隔\n4. 到这一步已经完成所有操作了，部分域名商可能需要等待几分钟，阿里云可以秒解析\n\n\n> [github help](https://help.github.com/articles/about-supported-custom-domains/)\n","tags":["dns"]}]