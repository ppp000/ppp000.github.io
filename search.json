[{"title":"mongo init in window10","url":"/2018/11/20/mongo-init/","content":"\n#### 准备\n> 系统：windows10\n- [download mongo.msi](https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.6.8-signed.msi)\n\n#### 过程\n> compass-install.exe组件记得勾选\n\n1. custom安装在：C:\\mongodb，在C:\\mongodb中手动创建\n    - C:\\mongodb\\data\\db\n    - C:\\mongodb\\log\\mongodb.log\n\n2. 管理员运行cmd，并进入至C:\\mongodb\\bin\n```\n//运行mongodb服务\nmongod --dbpath C:\\mongodb\\data\\db --logpath=C:\\mongodb\\log\\mongodb.log --logappend\n```\n\n3. 管理员运行cmd，并进入至C:\\mongodb\\bin\n```\n//连接mongodb服务\nmongo\n\n```\n4. 浏览器运行 http://localhost:27017/ ，下图表示mongodb服务正常\n![默认](https://i.loli.net/2018/11/12/5be92167a8361.jpg)\n\n5. 以上启动服务器只是一次性的，当关闭了命令窗口，服务器即会关闭，可以将mongodb作为windows启动，这样一开机，mongodb服务就已经启动了\n```\n//把将mongodb作为windows服务启动：\nmongod --dbpath C:\\mongodb\\data\\db --logpath=C:\\mongodb\\log\\mongodb.log --logappend --install --serviceName \"MongoDB\"\n```\n6. win + r 运行 service.msc 即可看到MongoDB服务正在运行\n\n\n#### robo3t\n> open shell\n\n```\n//create first admin_user\nshow dbs\nuse exadmin_dev\nvar user = {\n\t\"user\" : \"zero\",\n\t\"email\" : \"zero@gmail.com\",\n\t\"type\" : \"ADMIN\",\n\t\"pass\" : \"$2a$10$vLIGgsFFasVPRqKI3KKareWfoHSGXOv1DSacVHGhp3svwOa7OQUKW\"\n}\ndb.admin_user.insert(user)\n```\n\n#### 备注\nbin：目录下可执行文件：mongodb是指服务本身，mongo是连接至mongodb该服务\n\n在mongo下：connection > database > collection > document or BSON document（类似mysql的row）> filed（类似mysql的column） > index\n\n**若需要**\n```\n//使用配置文件启动mongodb服务：在c:\\mongodb\\config创建一个文件mongodb.conf，加入配置文件与直接运行命令的效果是一样的\ndbpath=C:\\mongodb\\data\\db            # 数据库文件\nlogpath=C:\\mongodb\\log\\mongodb.log    # 日志文件\nlogappend=true                        # 日志采用追加模式，配置后mongodb日志会追加到现有的日志文件，不会重新创建一个新文件\njournal=true                        # 启用日志文件，默认启用\nquiet=true                            # 这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为 false\nport=27017                            # 端口号 默认为 27017\n```\n\n[mongo install and config](https://www.cnblogs.com/weschen/p/8213746.html)","tags":["mongo"]},{"title":"foo.github.io解析到foo.com","url":"/2018/11/19/dns/","content":"\n\n\n### description\ngihub pages仅支持静态页面，博客恰好也属于其中，理论上说，不依赖于数据库的静态页面就可以在没有服务器的情况上访问。\n\n### 准备\n- 个人域名\n- 可正常访问的github个人博客，如：foo.github.io\n\n### 步骤\n1. blog/source下新建CHAME文件\n2. 写上：foo.com 不要www不要www不要www\n3. 打开域名商的控制台，添加解析记录，大多域名商需要以下几个字段\n    1. 记录类型：CNAME\n    2. 主机记录: www | @, 也就是说我们需要添加两条解析记录！\n    3. 解析线路：默认\n    4. 记录值：foo.github.io，即是你的目标域名\n    5. TTL: 10分钟，dns解析间隔\n4. 到这一步已经完成所有操作了，部分域名商可能需要等待几分钟，阿里云可以秒解析\n\n\n> [github help](https://help.github.com/articles/about-supported-custom-domains/)\n","tags":["dns"]}]